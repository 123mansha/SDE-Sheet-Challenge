
//Brute Force
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(head == null || head.next == null || k == 0)
            return head;
        
        ListNode temp = head;
        int len = 0;
        while(temp != null)
        {
            len++;
            temp = temp.next;
        }
        
        if(k%len == 0)
            return head;
        
        int n = k % len;
        
        for(int  i = 1 ; i <= n ;i++)
        {
            temp = head;
            while(temp.next.next != null)
                temp = temp.next;
            
            temp.next.next = head;
            head = temp.next;
            temp.next =null;
        }
        return head;
    }
}
_________________________________________________________________________________________

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(head == null || head.next == null || k==0)
            return head;
        
        ListNode curr = head;
        int len =1 ;
        while(curr.next != null)
        {
            len ++;
            curr = curr.next;
        }
        
        curr.next = head;
        k = len-(k%len);
        
        while(k-->0)
            curr = curr.next;
        
        head = curr.next;
        curr.next = null;
        
        return head;
    }
}
